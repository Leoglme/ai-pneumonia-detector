name: üöÄ Build & Deploy Nuxt 4 SSG (app/) to VPS

on:
  push:
    branches: [ main ]
    paths:
      - 'app/**'
      - '.github/workflows/deploy-nuxt4.yml'
  pull_request:
    branches: [ main ]
    paths:
      - 'app/**'
  workflow_dispatch:

concurrency:
  group: nuxt-ssg-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build-and-deploy:
    name: üèóÔ∏è Build & Deploy
    runs-on: ubuntu-latest
    env:
      API_BASE_URL: https://api.ai-pneumonia-detector.dibodev.fr
    defaults:
      run:
        working-directory: app

    steps:
      - name: üì• Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 1
          filter: 'blob:none'
          sparse-checkout: |
            app
          sparse-checkout-cone: false
          lfs: false

      - name: ‚öôÔ∏è Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: 'npm'
          cache-dependency-path: app/package-lock.json

      - name: üì¶ Install dependencies
        run: npm ci

      - name: üìù Setup .env
        run: |
          if [ -f .env.example ]; then cp .env.example .env; fi
          echo "API_BASE_URL=$API_BASE_URL" >> .env

      - name: üõ†Ô∏è Generate Static Site (SSG)
        env:
          NITRO_PRESET: static
        run: npm run generate

      - name: üì§ Deploy to VPS (scp)
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          port: ${{ secrets.SSH_PORT }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          source: 'app/.output/public/*'
          target: '/var/www/ai-pneumonia-detector.dibodev.fr/html'
          strip_components: 3

      - name: üîÑ Validate & Reload Nginx
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          port: ${{ secrets.SSH_PORT }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            if ! sudo nginx -t; then
              echo "Nginx configuration test failed"
              exit 1
            fi
            sudo systemctl reload nginx