name: 🚀 Deploy FastAPI (api/) to VPS

on:
  push:
    branches: [ main ]
    paths:
      - 'api/**'
      - 'requirements.txt'
      - '.github/workflows/deploy-api.yml'
  pull_request:
    branches: [ main ]
    paths:
      - 'api/**'
      - 'requirements.txt'
  workflow_dispatch:

concurrency:
  group: fastapi-${{ github.ref }}
  cancel-in-progress: true

jobs:
  deploy:
    name: 🏗️ Deploy API
    runs-on: ubuntu-latest

    steps:
      - name: 📥 Checkout (sparse)
        uses: actions/checkout@v4
        with:
          fetch-depth: 1
          sparse-checkout: |
            api
            requirements.txt
          sparse-checkout-cone: true
          lfs: false

      - name: 🧭 Debug workspace
        run: |
          pwd
          ls -la
          ls -la api || true
          cat .git/info/sparse-checkout || true
          find api -type f || true
          test -f requirements.txt && echo "requirements.txt exists" || echo "requirements.txt missing"

      - name: 🛠️ Create dummy file if api is empty
        run: |
          mkdir -p api
          touch api/.gitkeep

      - name: 🧱 Ensure target structure (SSH)
        if: github.event_name == 'push'
        uses: appleboy/ssh-action@v0.1.6
        with:
          host: ${{ secrets.SSH_HOST }}
          port: ${{ secrets.SSH_PORT }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            set -e
            TARGET_DIR="/var/www/api.ai-pneumonia-detector.dibodev.fr/html"
            sudo mkdir -p "$TARGET_DIR"
            sudo rm -rf "$TARGET_DIR/api"
            sudo mkdir -p "$TARGET_DIR/api"
            sudo mkdir -p "$TARGET_DIR/.venv"
            sudo chown -R $USER:$USER "$TARGET_DIR"

      - name: 📤 Upload API sources (SCP)
        if: github.event_name == 'push'
        uses: appleboy/scp-action@v0.1.4
        with:
          host: ${{ secrets.SSH_HOST }}
          port: ${{ secrets.SSH_PORT }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          strip_components: 0
          source: "api,requirements.txt"
          target: /var/www/api.ai-pneumonia-detector.dibodev.fr/html

      - name: 🐍 Create/Update venv & install deps (SSH)
        if: github.event_name == 'push'
        uses: appleboy/ssh-action@v0.1.6
        with:
          host: ${{ secrets.SSH_HOST }}
          port: ${{ secrets.SSH_PORT }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            set -e
            TARGET_DIR="/var/www/api.ai-pneumonia-detector.dibodev.fr/html"
            cd "$TARGET_DIR"
            # Add MySQL GPG key
            sudo apt-key adv --keyserver keyserver.ubuntu.com --recv-keys B7B3B788A8D3785C || true
            # Remove Docker repository
            if [ -f /etc/apt/sources.list.d/docker.list ]; then
              sudo rm -f /etc/apt/sources.list.d/docker.list
            fi
            # Update APT with error tolerance
            sudo apt-get update -y --allow-releaseinfo-change || true
            sudo apt-get install -y python3-venv
            # Debug requirements.txt
            ls -la requirements.txt || echo "requirements.txt missing"
            # Create or update virtual environment
            if [ ! -x ".venv/bin/python" ]; then
              python3 -m venv .venv
            fi
            . .venv/bin/activate
            python -m pip install --upgrade pip wheel
            pip install -r requirements.txt --no-cache-dir
            deactivate

      - name: ⚙️ Configure/restart systemd service (SSH)
        if: github.event_name == 'push'
        uses: appleboy/ssh-action@v0.1.6
        with:
          host: ${{ secrets.SSH_HOST }}
          port: ${{ secrets.SSH_PORT }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            set -e
            TARGET_DIR="/var/www/api.ai-pneumonia-detector.dibodev.fr/html"
            SERVICE_NAME="pneumo-api.service"
            DEPLOY_USER="${{ secrets.SSH_USERNAME }}"
            sudo bash -c "cat > /etc/systemd/system/${SERVICE_NAME}" <<EOF
            [Unit]
            Description=Pneumonia FastAPI (Uvicorn)
            After=network.target
            [Service]
            User=${DEPLOY_USER}
            WorkingDirectory=${TARGET_DIR}
            Environment=PYTHONPATH=${TARGET_DIR}
            ExecStart=${TARGET_DIR}/.venv/bin/uvicorn api.main:app --host 127.0.0.1 --port 8001 --workers 2 --proxy-headers
            Restart=always
            RestartSec=5
            KillSignal=SIGINT
            [Install]
            WantedBy=multi-user.target
            EOF
            sudo systemctl daemon-reload
            sudo systemctl enable ${SERVICE_NAME}
            sudo systemctl restart ${SERVICE_NAME}
            sudo systemctl --no-pager --full status ${SERVICE_NAME} || true

      - name: 🔄 Test & reload Nginx (SSH)
        if: github.event_name == 'push'
        uses: appleboy/ssh-action@v0.1.6
        with:
          host: ${{ secrets.SSH_HOST }}
          port: ${{ secrets.SSH_PORT }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            set -e
            sudo nginx -t
            sudo systemctl reload nginx