name: build-models-and-notebook

on:
  workflow_dispatch:

jobs:
  build-models-and-notebook:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Install dependencies
        run: |
          pip install --upgrade pip
          pip install -r requirements.txt
          pip install jupyter nbconvert  # Assurer que Jupyter et nbconvert sont installÃ©s

      - name: Run KNN model script
        run: |
          set -e
          python knn.py

      - name: Run CNN model script
        run: |
          set -e
          python cnn.py

      - name: Create Jupyter Notebook
        run: |
          set -e
          python create_notebook.py

      - name: Execute and Convert Notebook
        run: |
          set -e
          jupyter nbconvert --to notebook --execute ai_model_notebook.ipynb --no-input --output executed_notebook.ipynb
          jupyter nbconvert --to html executed_notebook.ipynb --no-input --output index.html

      - name: Upload Ai model Notebook as artifact
        uses: actions/upload-artifact@v4
        with:
          name: model-results-notebook
          path: ai_model_notebook.ipynb

      - name: Upload Executed Notebook as artifact
        uses: actions/upload-artifact@v4
        with:
          name: model-results-executed-notebook
          path: executed_notebook.ipynb

      - name: Upload HTML as artifact
        uses: actions/upload-artifact@v4
        with:
          name: model-results-html
          path: index.html

      - name: ðŸ§± Ensure target structure on VPS (SSH)
        uses: appleboy/ssh-action@v0.1.6
        with:
          host: ${{ secrets.SSH_HOST }}
          port: ${{ secrets.SSH_PORT }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            set -e
            TARGET_DIR="/var/www/api.ai-pneumonia-detector.dibodev.fr/html"
            sudo mkdir -p "$TARGET_DIR/models/knn"
            sudo mkdir -p "$TARGET_DIR/models/cnn"
            sudo mkdir -p "$TARGET_DIR/scalers/knn"
            sudo chown -R www-data:www-data "$TARGET_DIR"
            sudo chmod -R 755 "$TARGET_DIR"

      - name: Fix file permissions
        run: |
          chmod -R 755 models scalers index.html

      - name: ðŸ“¦ Pack bundle Ã  dÃ©ployer
        run: |
          set -e
          BUNDLE="bundle_models_$(date +%s).tar"
          echo "$BUNDLE" > bundle_name.txt
          tar -cf "$BUNDLE" \
            index.html \
            models/knn/knn_model.joblib \
            models/cnn/model.keras \
            models/cnn/meta.json \
            scalers/knn/scaler.joblib
          ls -lh "$BUNDLE"

      - name: ðŸ“¤ Upload bundle vers VPS (SCP - un seul fichier)
        uses: appleboy/scp-action@v0.1.6
        with:
          host: ${{ secrets.SSH_HOST }}
          port: ${{ secrets.SSH_PORT }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          target: /tmp
          strip_components: 0
          overwrite: true
          timeout: 10m
          command_timeout: 60m
          source: |
            ./*.tar

      - name: ðŸ“¦ DÃ©compresser le bundle sur le VPS
        uses: appleboy/ssh-action@v0.1.6
        with:
          host: ${{ secrets.SSH_HOST }}
          port: ${{ secrets.SSH_PORT }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            set -e
            TARGET_DIR="/var/www/api.ai-pneumonia-detector.dibodev.fr/html"
            BUNDLE="$(ls -1t /tmp/bundle_models_*.tar | head -n 1)"
            echo "Bundle dÃ©tectÃ©: $BUNDLE"
            sudo mkdir -p "$TARGET_DIR/models/knn" "$TARGET_DIR/models/cnn" "$TARGET_DIR/scalers/knn"
            # DÃ©compression dans le dossier cible
            sudo tar -xf "$BUNDLE" -C "$TARGET_DIR"
            # Permissions (adapte lâ€™utilisateur si besoin)
            sudo chown -R www-data:www-data "$TARGET_DIR"
            sudo chmod -R 755 "$TARGET_DIR"
            # VÃ©rifs
            ls -lh "$TARGET_DIR/index.html"
            ls -lh "$TARGET_DIR/models/knn/knn_model.joblib"
            ls -lh "$TARGET_DIR/models/cnn/model.keras"
            ls -lh "$TARGET_DIR/models/cnn/meta.json"
            ls -lh "$TARGET_DIR/scalers/knn/scaler.joblib"
